/**
 * 给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，
 * 返回移除后数组的新长度
 * 
 * 不要使用额外的数组空间，必须在原地修改输入数组，并在使用 O（1）的额外空间下完成
 * 
 * 
 * 示例
 * 给定数组  nums = [1,1, 2]
 * 返回新的数组长度 2, 并且原数组 nums 的前面 2个元素修改为 1,2
 * 你不需要考虑数组中超出新长度后面的元素
 * 
 * 示例 2
 * 给定 nums = [0,0,1,1,1,2,2,3,3,4]
 * 返回的长度 5, 并且原数组前 5 个修改为修改为 0,1,2,3,4
 * 你不需要考虑数组中超出新长度后面的元素
 * 
 * 
 * 
 * 参考答案： 
 * 使用一个count 来记录有多少个不重复的元素
 * 当数组下一个数与当前的数重复，就跳过当前的元素，不重复就放在数组中
 */

var removeDuplicates = nums => {
    if(nums === null || nums.length === 0) return 0;

    if(nums.length === 1 ) return 1;

    var count = 0;
    for(var i = 1; i<nums.length; i ++){
        if(nums[count] !== nums [i]){
            count ++
            nums[count] = nums[i]
        }
    }
    return ++count
}
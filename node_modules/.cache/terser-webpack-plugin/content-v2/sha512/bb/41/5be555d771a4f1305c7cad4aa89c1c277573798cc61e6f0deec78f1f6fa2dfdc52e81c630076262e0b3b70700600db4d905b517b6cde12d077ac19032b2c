{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{282:function(e,t,n){\"use strict\";n.r(t);var o=n(38),a=Object(o.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"mac-下-php环境的搭建\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mac-下-php环境的搭建\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" mac 下 PHP环境的搭建\")]),e._v(\" \"),n(\"ol\",[n(\"li\",[e._v(\"apache 启动与停止\")])]),e._v(\" \"),n(\"blockquote\",[n(\"p\",[e._v(\"mac 下apache环境默认是有的， 启动命令 \"),n(\"code\",[e._v(\"sudo apachectl start\")]),e._v(\", 停止命令 \"),n(\"code\",[e._v(\"sudo apachectl stop\")]),e._v(\",\\n重启apache \"),n(\"code\",[e._v(\"sudo apachectl restart\")]),e._v(\" ; 查看apache版本 \"),n(\"code\",[e._v(\"httpd -v\")])])]),e._v(\" \"),n(\"p\",[e._v(\"启动apache， 打开浏览器访问127.0.0.1 ，如果有页面，证明apache 服务已经正常启动了\")]),e._v(\" \"),n(\"ol\",{attrs:{start:\"2\"}},[n(\"li\",[e._v(\"配置PHP\")])]),e._v(\" \"),n(\"blockquote\",[n(\"p\",[e._v(\"同样，在mac下PHP也是有的，手动在apache 配置中加入PHP即可\")])]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v(\"// 编辑http.conf 添加 PHP模块 /etc/apache2/httpd.conf\\n\\n搜索 LoadModule php ，找到这个后，删除前面的 # 注释保存，在命令行输入 php -v 能打印出PHP版本\\n\\n\")])])]),n(\"p\",[e._v(\"修改 apache2/httpd.conf 文件\")]),e._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[e._v('#\\n# If you wish httpd to run as a different user or group, you must run\\n# httpd as root initially and it will switch.  \\n#\\n# User/Group: The name (or #number) of the user/group to run httpd as.\\n# It is usually good practice to create a dedicated user and group for\\n# running httpd, as with most system services.\\n#\\nUser qifeng   # 用户名\\nGroup _www\\n\\n\\n\\n<Directory />\\n    # AllowOverride none\\n    AllowOverride all\\n    Options All\\n    allow from all\\n    # Require all denied\\n</Directory>\\n\\n#\\n# Note that from this point forward you must specifically allow\\n# particular features to be enabled - so if something\\'s not working as\\n# you might expect, make sure that you have specifically enabled it\\n# below.\\n#\\n\\n#\\n# DocumentRoot: The directory out of which you will serve your\\n# documents. By default, all requests are taken from this directory, but\\n# symbolic links and aliases may be used to point to other locations.\\n#\\n# DocumentRoot \"/Library/WebServer/Documents\"\\n# <Directory \"/Library/WebServer/Documents\">\\nDocumentRoot \"/Users/qifeng/Desktop/qiphon/php\"\\n<Directory \"/Users/qifeng/Desktop/qiphon/php\">\\n    #\\n    # Possible values for the Options directive are \"None\", \"All\",\\n    # or any combination of:\\n    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews\\n    #\\n    # Note that \"MultiViews\" must be named *explicitly* --- \"Options All\"\\n    # doesn\\'t give it to you.\\n    #\\n    # The Options directive is both complicated and important.  Please see\\n    # http://httpd.apache.org/docs/2.4/mod/core.html#options\\n    # for more information.\\n    #\\n    Options FollowSymLinks Multiviews\\n    # Options Indexes FollowSymLinks Multiviews\\n    MultiviewsMatch Any\\n\\n    #\\n    # AllowOverride controls what directives may be placed in .htaccess files.\\n    # It can be \"All\", \"None\", or any combination of the keywords:\\n    #   AllowOverride FileInfo AuthConfig Limit\\n    #\\n    # AllowOverride None\\n    AllowOverride All\\n\\n    #\\n    # Controls who can get stuff from this server.\\n    #\\n    Require all granted\\n</Directory>\\n')])])])])},[],!1,null,null,null);t.default=a.exports}}]);","extractedComments":[]}
(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{217:function(t,s,n){"use strict";n.r(s);var e=n(28),_=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"nginx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" "),n("a",{attrs:{href:"http://nginx.org/en/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("下载nginx 压缩包 ，解压")])]),t._v(" "),n("li",[n("p",[t._v("运行解压后文件下的 "),n("code",[t._v("configure")]),t._v(", 如果有如下报错需要安装 pcre")])])]),t._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("./configure: error: the HTTP rewrite module requires the PCRE library.\nYou can either disable the module by using --without-http_rewrite_module\noption, or "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" the PCRE library into the system, or build the PCRE library\nstatically from the "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" with nginx by using --with-pcre"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" option.\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dnf install pcre pcre-devel")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 之后在运行 ")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./configure")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 ")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make install")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("ul",[n("li",[n("p",[t._v("运行 nginx  "),n("code",[t._v("sudo /usr/local/nginx/sbin/nginx")])])]),t._v(" "),n("li",[n("p",[t._v("终止 nginx 命令")])])]),t._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进程完成当前工作后再停止")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /usr/local/nginx/sbin/nginx -s quit")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 无论进程是否在工作，都直接停止进程。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /usr/local/nginx/sbin/nginx -s stop")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kill命令")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -s QUIT "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (数字是进程的pid)")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("ul",[n("li",[t._v("其他命令")])]),t._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新加载配置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /usr/local/nginx/sbin/nginx -s reload")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重新打开日志文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /usr/local/nginx/sbin/nginx -s reopen")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为了获取所有正在运行的nginx进程的列表，ps 可以使用该实用程序，例如，通过以下方式使用：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ax "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" nginx\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("h2",{attrs:{id:"nginx-conf-基本配置说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-conf-基本配置说明"}},[t._v("#")]),t._v(" nginx.conf 基本配置说明")]),t._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#运行用户")]),t._v("\nuser nobody"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动进程,通常设置成和cpu的数量相等")]),t._v("\nworker_processes  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#全局错误日志及PID文件")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  notice;")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  info;")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid        logs/nginx.pid;")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#工作模式及连接数上限")]),t._v("\nevents "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#epoll是多路复用IO(I/O Multiplexing)中的一种方式,")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#仅用于linux2.6以上内核,可以大大提高nginx的性能")]),t._v("\n    use   epoll"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单个后台worker process进程的最大并发链接数    ")]),t._v("\n    worker_connections  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 并发总数是 worker_processes 和 worker_connections 的乘积")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 即 max_clients = worker_processes * worker_connections")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在设置了反向代理的情况下，max_clients = worker_processes * worker_connections / 4  为什么")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 为什么上面反向代理要除以4，应该说是一个经验值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据以上条件，正常情况下的Nginx Server可以应付的最大连接数为：4 * 8000 = 32000")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# worker_connections 值的设置跟物理内存大小有关")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因为并发受IO约束，max_clients的值须小于系统可以打开的最大文件数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 而系统可以打开的最大文件数和内存大小成正比，一般1GB内存的机器上可以打开的文件数大约是10万左右")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 我们来看看360M内存的VPS可以打开的文件句柄数是多少：")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $ cat /proc/sys/fs/file-max")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出 34336")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 32000 < 34336，即并发连接总数小于系统可以打开的文件句柄总数，这样就在操作系统可以承受的范围之内")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以，worker_connections 的值需根据 worker_processes 进程数目和系统可以打开的最大文件总数进行适当地进行设置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使得并发总数小于操作系统可以打开的最大文件数目")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其实质也就是根据主机的物理CPU和内存进行配置")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当然，理论上的并发总数可能会和实际有所偏差，因为主机还有其他的工作进程需要消耗系统资源。")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ulimit -SHn 65535")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n \nhttp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定mime类型,类型由mime.type文件定义")]),t._v("\n    include    mime.types"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    default_type  application/octet-stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定日志格式")]),t._v("\n    log_format  main  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),t._v(" - "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_user")]),t._v(" ["),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local")]),t._v('] "'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request")]),t._v("\" '")]),t._v("\n                      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(' "'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_referer")]),t._v("\" '")]),t._v("\n                      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\""),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v('" "'),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_x_forwarded_for")]),t._v("\"'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    access_log  logs/access.log  main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对于普通应用，必须设为 on,")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以平衡磁盘与网络I/O处理速度，降低系统的uptime.")]),t._v("\n    sendfile     on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tcp_nopush     on;")]),t._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接超时时间")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive_timeout  0;")]),t._v("\n    keepalive_timeout  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    tcp_nodelay     on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启gzip压缩")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),t._v("  on"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    gzip_disable "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MSIE [1-6]."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定请求缓冲")]),t._v("\n    client_header_buffer_size    128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    large_client_header_buffers  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 128k"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定虚拟主机配置")]),t._v("\n    server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#侦听80端口")]),t._v("\n        listen    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义使用 www.nginx.cn访问")]),t._v("\n        server_name  www.nginx.cn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义服务器的默认网站根目录位置")]),t._v("\n        root html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定本虚拟主机的访问日志")]),t._v("\n        access_log  logs/nginx.access.log  main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认请求")]),t._v("\n        location / "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义首页索引文件的名称")]),t._v("\n            index index.php index.html index.htm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义错误提示页面")]),t._v("\n        error_page   "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v(" /50x.html"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#静态文件，nginx自己处理")]),t._v("\n        location ~ ^/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("javascript"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("js"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("css"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("flash"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("media"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("static"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("/ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            \n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#过期30天，静态文件不怎么更新，过期可以设大一点，")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果频繁更新，则可以设置得小一点。")]),t._v("\n            expires 30d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#PHP 脚本请求全部转发到 FastCGI处理. 使用FastCGI默认配置.")]),t._v("\n        location ~ .php$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            fastcgi_pass "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:9000"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fastcgi_index index.php"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fastcgi_param  SCRIPT_FILENAME  "),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$document_root")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$fastcgi_script_name")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            include fastcgi_params"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#禁止访问 .htxxx 文件")]),t._v("\n            location ~ /.ht "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            deny all"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br"),n("span",{staticClass:"line-number"},[t._v("74")]),n("br"),n("span",{staticClass:"line-number"},[t._v("75")]),n("br"),n("span",{staticClass:"line-number"},[t._v("76")]),n("br"),n("span",{staticClass:"line-number"},[t._v("77")]),n("br"),n("span",{staticClass:"line-number"},[t._v("78")]),n("br"),n("span",{staticClass:"line-number"},[t._v("79")]),n("br"),n("span",{staticClass:"line-number"},[t._v("80")]),n("br"),n("span",{staticClass:"line-number"},[t._v("81")]),n("br"),n("span",{staticClass:"line-number"},[t._v("82")]),n("br"),n("span",{staticClass:"line-number"},[t._v("83")]),n("br"),n("span",{staticClass:"line-number"},[t._v("84")]),n("br"),n("span",{staticClass:"line-number"},[t._v("85")]),n("br"),n("span",{staticClass:"line-number"},[t._v("86")]),n("br"),n("span",{staticClass:"line-number"},[t._v("87")]),n("br"),n("span",{staticClass:"line-number"},[t._v("88")]),n("br"),n("span",{staticClass:"line-number"},[t._v("89")]),n("br"),n("span",{staticClass:"line-number"},[t._v("90")]),n("br"),n("span",{staticClass:"line-number"},[t._v("91")]),n("br"),n("span",{staticClass:"line-number"},[t._v("92")]),n("br"),n("span",{staticClass:"line-number"},[t._v("93")]),n("br"),n("span",{staticClass:"line-number"},[t._v("94")]),n("br"),n("span",{staticClass:"line-number"},[t._v("95")]),n("br"),n("span",{staticClass:"line-number"},[t._v("96")]),n("br"),n("span",{staticClass:"line-number"},[t._v("97")]),n("br"),n("span",{staticClass:"line-number"},[t._v("98")]),n("br"),n("span",{staticClass:"line-number"},[t._v("99")]),n("br"),n("span",{staticClass:"line-number"},[t._v("100")]),n("br"),n("span",{staticClass:"line-number"},[t._v("101")]),n("br"),n("span",{staticClass:"line-number"},[t._v("102")]),n("br"),n("span",{staticClass:"line-number"},[t._v("103")]),n("br"),n("span",{staticClass:"line-number"},[t._v("104")]),n("br"),n("span",{staticClass:"line-number"},[t._v("105")]),n("br"),n("span",{staticClass:"line-number"},[t._v("106")]),n("br"),n("span",{staticClass:"line-number"},[t._v("107")]),n("br"),n("span",{staticClass:"line-number"},[t._v("108")]),n("br"),n("span",{staticClass:"line-number"},[t._v("109")]),n("br"),n("span",{staticClass:"line-number"},[t._v("110")]),n("br"),n("span",{staticClass:"line-number"},[t._v("111")]),n("br"),n("span",{staticClass:"line-number"},[t._v("112")]),n("br"),n("span",{staticClass:"line-number"},[t._v("113")]),n("br"),n("span",{staticClass:"line-number"},[t._v("114")]),n("br"),n("span",{staticClass:"line-number"},[t._v("115")]),n("br"),n("span",{staticClass:"line-number"},[t._v("116")]),n("br"),n("span",{staticClass:"line-number"},[t._v("117")]),n("br"),n("span",{staticClass:"line-number"},[t._v("118")]),n("br"),n("span",{staticClass:"line-number"},[t._v("119")]),n("br"),n("span",{staticClass:"line-number"},[t._v("120")]),n("br"),n("span",{staticClass:"line-number"},[t._v("121")]),n("br"),n("span",{staticClass:"line-number"},[t._v("122")]),n("br"),n("span",{staticClass:"line-number"},[t._v("123")]),n("br"),n("span",{staticClass:"line-number"},[t._v("124")]),n("br"),n("span",{staticClass:"line-number"},[t._v("125")]),n("br")])]),n("h3",{attrs:{id:"nginx编译选项说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx编译选项说明"}},[t._v("#")]),t._v(" nginx编译选项说明")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("make是用来编译的，它从Makefile中读取指令，然后编译。")])]),t._v(" "),n("li",[n("p",[t._v("make install是用来安装的，它也从Makefile中读取指令，安装到指定的位置。")])]),t._v(" "),n("li",[n("p",[t._v("configure命令是用来检测你的安装平台的目标特征的。它定义了系统的各个方面，包括nginx的被允许使用的连接处理的方法，比如它会检测你是不是有CC或GCC，并不是需要CC或GCC，它是个shell脚本，执行结束时，它会创建一个Makefile文件。nginx的configure命令支持以下参数：")])])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("命令")]),t._v(" "),n("th",[t._v("描述")]),t._v(" "),n("th",[t._v("默认(目录/名称)")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("code",[t._v("--help")])]),t._v(" "),n("td",[t._v("打印帮助信息")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--prefix=path")])]),t._v(" "),n("td",[t._v("定义将保留服务器文件的目录。此相同目录还将用于设置所有相对路径 configure (库原路径除外)和 nginx.conf 配置文件中。")]),t._v(" "),n("td",[t._v("/usr/local/nginx")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--sbin-path=path")])]),t._v(" "),n("td",[t._v("设置 nginx 可执行文件的名称。此名称仅在安装期间使用。")]),t._v(" "),n("td",[t._v("prefix/sbin/nginx")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--modules-path=path")])]),t._v(" "),n("td",[t._v("定义将在其中安装 nginx 动态模块的目录。默认使用")]),t._v(" "),n("td",[t._v("prefix/modules")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--config-path=path")])]),t._v(" "),n("td",[t._v("设置配置文件名称")]),t._v(" "),n("td",[t._v("prefix/config/nginx.conf")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--error-log-path=path")])]),t._v(" "),n("td",[t._v("设置主要错误、警告和诊断文件的名称。安装后可以在nginx.conf 中使用 error_log 指令在配置文件中更改文件名")]),t._v(" "),n("td",[t._v("prefix/logs/error.log")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--pid-path=path")])]),t._v(" "),n("td",[t._v("设置 nginx.pid 将存储主进程的进程id的文件名。安装后，可以在nginx.conf 中重新使用 pid 指令配置")]),t._v(" "),n("td",[t._v("prefix/logs/nginx.pid")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--lock-path=path")])]),t._v(" "),n("td",[t._v("为锁定的文件名称设置前缀。安装后，可以在 nginx.conf 中使用 lock_file 指令配置")]),t._v(" "),n("td",[t._v("prefix/logs/nginx.lock")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--user=name")])]),t._v(" "),n("td",[t._v("设置一个非 root 用户的名称，控制nginx 的使用用户。可以在 nginx.conf 中重新配置 name 指令")]),t._v(" "),n("td",[t._v("nobody")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--group=name")])]),t._v(" "),n("td",[t._v("设置一个控制 nginx 的使用用户组。可以在 nginx.conf 中重新配置 group 指令")]),t._v(" "),n("td",[t._v("nobody")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--build=name")])]),t._v(" "),n("td",[t._v("设置一个可选的 nginx 构建名称")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--builddir=path")])]),t._v(" "),n("td",[t._v("设置构建目录")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-select_module")]),t._v(" "),n("br"),t._v(" "),n("code",[t._v("--without-select_module")])]),t._v(" "),n("td",[t._v("启用构建允许服务器使用 select()方法的模块。如果平台不支持kqueue 、epoll 或 /dev/poll 等更合适的方法，则会自动构建此模块")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-poll_module")]),t._v(" "),n("br"),t._v(" "),n("code",[t._v("--without-poll_module")])]),t._v(" "),n("td",[t._v("启用构建允许服务器使用 poll()方法的模块。如果平台不支持kqueue 、epoll 或 /dev/poll 等更合适的方法，则会自动构建此模块")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-threads")])]),t._v(" "),n("td",[t._v("启用线程池")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-file-aio")])]),t._v(" "),n("td",[t._v("支持在FreeBSD 和 linux 上使用 asynchronous file I/O(AIO)")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_ssl_module")])]),t._v(" "),n("td",[t._v("启用构建将 HTTPS protocol support 模块。默认未构建这个模块，需要OpenSSL 库来构建和运行此模块")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_v2_module")])]),t._v(" "),n("td",[t._v("启用 HTTP/2 模块，这个模块默认没有启用")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_realip_module")])]),t._v(" "),n("td",[t._v("启用 ngx_http_realip_module 该模块将客户端地址更改为指定的 Header 字段中发送的地址。 默认未构建")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_addition_module")])]),t._v(" "),n("td",[t._v("启用 ngx_http_addition_module  该模块在响应之前或之后添加文本")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_xslt_module")]),n("br"),t._v(" "),n("code",[t._v("--with-http_xslt_module=dynamic")])]),t._v(" "),n("td",[t._v("启用 ngx_http_xslt_module  该模块使用一个或多个 XSLT 样式表转换 XML 相应。默认未构建。这个依赖 libxml2 and libxslt 库")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_image_filter_module")]),n("br"),t._v(" "),n("code",[t._v("--with-http_image_filter_module=dynamic")])]),t._v(" "),n("td",[t._v("启用 ngx_http_image_filter_module  可以转换 JPEG、GIF、PNG和 WebP 格式的图像。默认未构建。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_geoip_module")]),n("br"),t._v(" "),n("code",[t._v("--with-http_geoip_module=dynamic")])]),t._v(" "),n("td",[t._v("启用 ngx_http_geoip_module  该模块根据客户端ip地址和预编译的 MaxMind 数据库创建变量。默认未构建。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_sub_module")])]),t._v(" "),n("td",[t._v("启用 ngx_http_sub_module  该 模块通过将一个指定的字符串替换为另一个指定的字符串来修改响应。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_dva_module")])]),t._v(" "),n("td",[t._v("启用 ngx_http_dva_module  该 模块通过WebDAV协议提供文件管理自动化。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_mp4_module")])]),t._v(" "),n("td",[t._v("启用 ngx_http_mp4_module  该 模块为MP4文件提供伪流服务器端支持。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_gunzip_module")])]),t._v(" "),n("td",[t._v("支持为不支持“ gzip”编码方法的客户端构建ngx_http_gunzip_module 模块，该 模块使用“ Content-Encoding: gzip” 解压缩响应。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_auth_request_module")])]),t._v(" "),n("td",[t._v("允许构建ngx_http_auth_request_module 模块，该 模块基于子请求的结果实现客户端授权。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_random_index_module")])]),t._v(" "),n("td",[t._v("支持构建ngx_http_random_index_module 模块，该 模块处理以斜杠（' /'）结尾的请求，并从目录中选择一个随机文件作为索引文件。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_secure_link_module")])]),t._v(" "),n("td",[t._v("启用构建 ngx_http_secure_link_module 模块。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_degradation_module")])]),t._v(" "),n("td",[t._v("启用构建 ngx_http_degradation_module模块。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_slice_module")])]),t._v(" "),n("td",[t._v("支持构建ngx_http_slice_module 模块，该 模块将请求拆分为子请求，每个子请求返回一定范围的响应。该模块提供了更有效的大响应缓存。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_stub_status_module")])]),t._v(" "),n("td",[t._v("支持构建ngx_http_stub_status_module 模块，该 模块提供对基本状态信息的访问。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_charset_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_charset_module 模块，该 模块将指定的字符集添加到“ Content-Type”响应头字段中，并且可以将数据从一个字符集转换为另一个字符集。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_gzip_module")])]),t._v(" "),n("td",[t._v("禁用构建可压缩 HTTP服务器响应的模块。zlib库是构建和运行此模块所必需的。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_ssi_module")])]),t._v(" "),n("td",[t._v("禁用构建 处理通过SSI（服务器端包含）命令的 ngx_http_ssi_module模块的响应。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_userid_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_userid_module 模块，该 模块设置适用于客户端标识的cookie。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_auth_basic_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_auth_basic_module 模块，该 模块允许通过使用“ HTTP基本身份验证”协议验证用户名和密码来限制对资源的访问。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_mirror_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_mirror_module 模块，该 模块通过创建后台镜像子请求来实现原始请求的镜像。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_autoindex_module")])]),t._v(" "),n("td",[t._v("禁用构建 ngx_http_autoindex_module 模块，以处理以斜杠（' /'）结尾的请求，并在ngx_http_index_module模块找不到索引文件的情况下生成目录列表 。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_map_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_map_module 模块，该 模块创建的变量的值取决于其他变量的值。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_split_clients_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_split_clients_module 模块，该 模块创建用于A / B测试的变量。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_referer_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_referer_module 模块，该 模块可以阻止对“ Referer”标头字段中具有无效值的请求的站点访问。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_rewrite_module")])]),t._v(" "),n("td",[t._v("禁用构建允许HTTP服务器 重定向请求并更改请求URI的模块。构建和运行此模块需要PCRE库。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_proxy_module")])]),t._v(" "),n("td",[t._v("禁用构建HTTP服务器 代理模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_fastcgi_module")])]),t._v(" "),n("td",[t._v("禁用构建 将请求传递到FastCGI服务器的 ngx_http_fastcgi_module模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_uwsgi_module")])]),t._v(" "),n("td",[t._v("禁用构建 将请求传递到uwsgi服务器的 ngx_http_uwsgi_module模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_scgi_module")])]),t._v(" "),n("td",[t._v("禁用构建 将请求传递到SCGI服务器的 ngx_http_scgi_module模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_grpc_module")])]),t._v(" "),n("td",[t._v("禁用构建 将请求传递到gRPC服务器的 ngx_http_grpc_module模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_memcached_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_memcached_module 模块，该 模块从memcached服务器获取响应。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_limit_conn_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_limit_conn_module 模块，该 模块限制每个键的连接数，例如，单个IP地址的连接数。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_empty_gif_module")])]),t._v(" "),n("td",[t._v("禁用构建发出单像素透明GIF的模块 。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_browser_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_http_browser_module 模块，该 模块创建的变量的值取决于“ User-Agent”请求标头字段的值。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_upstream_hash_module")])]),t._v(" "),n("td",[t._v("禁用构建实现哈希 负载平衡方法的模块 。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_upstream_ip_hash_module")])]),t._v(" "),n("td",[t._v("禁用构建实现ip_hash 负载平衡方法的模块 。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_upstream_least_conn_module")])]),t._v(" "),n("td",[t._v("禁用构建实现了minimum_conn 负载平衡方法的模块 。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_upstream_keepalive_module")])]),t._v(" "),n("td",[t._v("禁用构建一个模块来提供 对上游服务器连接的缓存。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http_upstream_zone_module")])]),t._v(" "),n("td",[t._v("禁用构建模块，该模块可以将上游组的运行时状态存储在共享内存 区域中。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-http_perl_module")]),t._v(" "),n("br"),t._v(" "),n("code",[t._v("--with-http_perl_module=dynamic")])]),t._v(" "),n("td",[t._v("支持构建 嵌入式Perl模块。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-perl_modules_path=path")])]),t._v(" "),n("td",[t._v("定义一个目录，该目录将保留Perl模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-perl=path")])]),t._v(" "),n("td",[t._v("设置Perl二进制文件的名称。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--http-log-path=path")])]),t._v(" "),n("td",[t._v("设置HTTP服务器的主请求日志文件的名称。安装后，可以始终nginx.conf使用access_log伪指令在配置文件中 更改文件名 。默认情况下，文件名为 prefix/logs/access.log。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--http-client-body-temp-path=path")])]),t._v(" "),n("td",[t._v("定义用于存储包含客户端请求正文的临时文件的目录。安装后，可以始终nginx.conf使用client_body_temp_path 指令在配置文件中 更改目录 。默认情况下，目录名为 prefix/client_body_temp。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--http-proxy-temp-path=path")])]),t._v(" "),n("td",[t._v("定义一个目录，用于存储包含从代理服务器接收到的数据的临时文件。安装后，可以始终nginx.conf使用proxy_temp_path 指令在配置文件中 更改目录 。默认情况下，目录名为 prefix/proxy_temp。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--http-fastcgi-temp-path=path")])]),t._v(" "),n("td",[t._v("定义一个目录，用于存储包含从FastCGI服务器接收到的数据的临时文件。安装后，可以始终nginx.conf使用fastcgi_temp_path 指令在配置文件中 更改目录 。默认情况下，目录名为 prefix/fastcgi_temp。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--http-uwsgi-temp-path=path")])]),t._v(" "),n("td",[t._v("定义一个目录，用于存储带有从uwsgi服务器接收到的数据的临时文件。安装后，可以始终nginx.conf使用uwsgi_temp_path 指令在配置文件中 更改目录 。默认情况下，目录名为 prefix/uwsgi_temp。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--http-scgi-temp-path=path")])]),t._v(" "),n("td",[t._v("定义一个目录，用于存储带有从SCGI服务器接收到的数据的临时文件。安装后，可以始终nginx.conf使用scgi_temp_path 指令在配置文件中 更改目录 。默认情况下，目录名为 prefix/scgi_temp。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http")])]),t._v(" "),n("td",[t._v("禁用HTTP服务器")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-http-cache")])]),t._v(" "),n("td",[t._v("禁用HTTP缓存。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-mail")]),t._v(" "),n("br"),t._v(" "),n("code",[t._v("--with-mail=dynamic")])]),t._v(" "),n("td",[t._v("启用POP3 / IMAP4 / SMTP 邮件代理服务器。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-mail_ssl_module")])]),t._v(" "),n("td",[t._v("支持构建一个模块，该模块 向邮件代理服务器添加 SSL / TLS协议支持。默认情况下未构建此模块。需要OpenSSL库来构建和运行此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-mail_pop3_module")])]),t._v(" "),n("td",[t._v("在邮件代理服务器中 禁用POP3协议。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-mail_imap_module")])]),t._v(" "),n("td",[t._v("在邮件代理服务器中 禁用IMAP协议")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-mail_imap_module")])]),t._v(" "),n("td",[t._v("在邮件代理服务器中 禁用SMTP协议。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-stream")]),t._v(" "),n("br"),n("code",[t._v("--with-stream=dynamic")])]),t._v(" "),n("td",[t._v("支持构建 用于通用TCP / UDP代理和负载平衡的 流模块。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-stream_ssl_module")])]),t._v(" "),n("td",[t._v("支持构建一个模块，该模块 向流模块添加 SSL / TLS协议支持。默认情况下未构建此模块。需要OpenSSL库来构建和运行此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-stream_realip_module")])]),t._v(" "),n("td",[t._v("启用构建ngx_stream_realip_module 模块的功能，该 模块将客户端地址更改为PROXY协议标头中发送的地址。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-stream_geoip_module")]),t._v(" "),n("br"),n("code",[t._v("--with-stream_geoip_module=dynamic")])]),t._v(" "),n("td",[t._v("支持构建ngx_stream_geoip_module 模块，该 模块根据客户端IP地址和预编译的MaxMind数据库创建变量 。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-stream_ssl_preread_module")])]),t._v(" "),n("td",[t._v("支持构建ngx_stream_ssl_preread_module 模块，该 模块允许从ClientHello 消息中提取信息， 而无需终止SSL / TLS。默认情况下未构建此模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-stream_limit_conn_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_stream_limit_conn_module 模块，该 模块限制每个键的连接数，例如，单个IP地址的连接数。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-stream_access_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_stream_access_module 模块，该 模块允许限制对某些客户端地址的访问。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-stream_geo_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_stream_geo_module 模块，该 模块创建的变量值取决于客户端IP地址。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-stream_map_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_stream_map_module 模块，该 模块创建的变量值取决于其他变量的值。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-stream_split_clients_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_stream_split_clients_module 模块，该 模块创建用于A / B测试的变量。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-stream_return_module")])]),t._v(" "),n("td",[t._v("禁用构建ngx_stream_return_module 模块，该 模块向客户端发送一些指定的值，然后关闭连接。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-stream_upstream_hash_module")])]),t._v(" "),n("td",[t._v("禁用构建实现哈希 负载平衡方法的模块 。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-stream_upstream_least_conn_module")])]),t._v(" "),n("td",[t._v("禁用构建实现了minimum_conn 负载平衡方法的模块")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-stream_upstream_zone_module")])]),t._v(" "),n("td",[t._v("禁用构建模块，该模块可以将上游组的运行时状态存储在共享内存 区域中。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-google_perftools_module")])]),t._v(" "),n("td",[t._v("允许构建ngx_google_perftools_module 模块，该 模块可以使用Google Performance Tools对nginx工作进程进行 性能分析。该模块适用于Nginx开发人员，默认情况下未构建。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-cpp_test_module")])]),t._v(" "),n("td",[t._v("启用构建 ngx_cpp_test_module模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--add-module=path")])]),t._v(" "),n("td",[t._v("启用外部模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--add-dynamic-module=path")])]),t._v(" "),n("td",[t._v("启用外部动态模块。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-compat")])]),t._v(" "),n("td",[t._v("启用动态模块兼容性。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-cc=path")])]),t._v(" "),n("td",[t._v("设置C编译器的名称。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-cpp=path")])]),t._v(" "),n("td",[t._v("设置C预处理器的名称。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-cc-opt=parameters")])]),t._v(" "),n("td",[t._v('设置将添加到CFLAGS变量的其他参数。在FreeBSD下使用系统PCRE库时， --with-cc-opt="-I /usr/local/include" 应指定。如果select()需要增加支持的文件数量，也可以在此处指定，例如： --with-cc-opt="-D FD_SETSIZE=2048"。')]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-ld-opt=parameters")])]),t._v(" "),n("td",[t._v('设置将在链接期间使用的其他参数。在FreeBSD下使用系统PCRE库时， --with-ld-opt="-L /usr/local/lib" 应指定。')]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-cpu-opt=cpu")])]),t._v(" "),n("td",[t._v("支持按指定的CPU建设： pentium，pentiumpro， pentium3，pentium4， athlon，opteron， sparc32，sparc64， ppc64。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--without-pcre")])]),t._v(" "),n("td",[t._v("禁用PCRE库的使用。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-pcre")])]),t._v(" "),n("td",[t._v("强制使用PCRE库。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-pcre=path")])]),t._v(" "),n("td",[t._v("设置PCRE库源的路径。需要从PCRE站点下载并分发库分发（版本4.4 — 8.43） 。其余的由nginx的./configure和完成 make。该库对于location指令中的正则表达式支持和 ngx_http_rewrite_module 模块是必需的 。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-pcre-opt=parameters")])]),t._v(" "),n("td",[t._v("为PCRE设置其他构建选项。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-pcre-jit")])]),t._v(" "),n("td",[t._v("使用“及时编译”支持（1.1.12，pcre_jit指令）构建PCRE库 。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-zlib=path")])]),t._v(" "),n("td",[t._v("设置zlib库源的路径。需要从zlib站点下载库发行版（版本1.1.3-1.2.11） 并解压缩。其余的由nginx的./configure和完成 make。ngx_http_gzip_module模块需要该库 。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-zlib-opt=parameters")])]),t._v(" "),n("td",[t._v("为zlib设置其他构建选项。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-zlib-asm=cpu")])]),t._v(" "),n("td",[t._v("使得能够使用指定的CPU中的一个优化的zlib汇编源程序： pentium，pentiumpro。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-libatomic")])]),t._v(" "),n("td",[t._v("强制使用libatomic_ops库。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-libatomic=path")])]),t._v(" "),n("td",[t._v("设置libatomic_ops库源的路径。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-openssl=path")])]),t._v(" "),n("td",[t._v("设置OpenSSL库源的路径。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-openssl-opt=parameters")])]),t._v(" "),n("td",[t._v("为OpenSSL设置其他构建选项。")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[n("code",[t._v("--with-debug")])]),t._v(" "),n("td",[t._v("启用调试日志")]),t._v(" "),n("td")])])]),t._v(" "),n("p",[t._v("参数用法示例（所有这些都需要在一行中键入）：")]),t._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[t._v("\n./configure\n    --sbin-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/nginx\n    --conf-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/nginx.conf\n    --pid-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/nginx.pid\n    --with-http_ssl_module\n    --with-pcre"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pcre-8.43\n    --with-zlib"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/zlib-1.2.11\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])])])}),[],!1,null,null,null);s.default=_.exports}}]);